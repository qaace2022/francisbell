{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red27\green27\blue27;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c14118\c14118\c14118;\cssrgb\c100000\c100000\c100000;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww34360\viewh21600\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs28 \cf0 1.Difference between a class and an object?\
  Ans:CLASS:\
                       It is a blue print from which objects are created.\
                       It is a group of similar objects.\
                       It has components like modifiers, superclass, class name, interface, body etc.\
                       It is a logical entity.\
                       Class body surrounded by braces\{\}\
\
         OBJECT:\
                       It is a basic unit of object oriented programming and represents the real life entities.\
                       Naturally JAVA program creates many objects and the objects consists of state, behavior and  identity.\
                       For example Mobile\
                       Identity - name\
                       State - colour and size\
                       behavior - technology and way of using.\
                       \
                       It is an instance of a class.\
                       It created many items as per requirements.\
                       \
2.What is overloading and its uses?\
Ans: We have two methods with the same but have different parameters, so these methods are called overloading.\
        Overloading is the ability to create multiple methods of the same name, but with different parameters.\
        It increases the readability of the program.\
        It have flexibility to call similar method for different types of data.\
        This method have different  return types.\
        We can reuse the codes later.\
          \
3.What is overriding and its uses?\
Ans:Overriding is a feature that allows a subclass or child class to provide a specific implementation of a method that is already\
 provided by its super class or parent class.\
       It is used to provide the specific implementation of a method which is already provided by its superclass.\
       It is used for runtime polymorphism.\
       We can alter or modify the codes.\
\
4.What is the difference between overloading and overriding?\
Ans:OVERLOADING:\
                                  It is used to increase the readability of the program.\
                                  It is used to performed within class.\
                                  Parameter must be different.\
                                  Example for overloading is compile time polymorphism.\
        OVERRIDING:\
                                  It is used to provide the specific implementation of the method is already provided by its super class.\
                                  It have two class that have inheritance relationship.\
                                  Parameter must be same.\
                                  Example of overriding is run time overriding.\
\
5.What is an abstract class?\
Ans:It is a superclass that cannot be instantiated and is used to state or define general characteristics.\
       To give blueprint for derived classes and set some rules what the derived classes must implement \
when they inherit an abstract class.\
       Hides the details from the user to focus only on the essential details to increase the reducing complexity.\
\
6.What is interface?When and How can we use interface in java?\
Ans:It is a blueprint of a class.\
       It has static constants and abstract methods.\
       It is used to mechanism to achieve abstraction.\
       
\f1\fs29\fsmilli14667 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 we can access the properties of an interface through inheritance and overriding
\fs28 \cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\fs29\fsmilli14667 \cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0        \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 We can inherit from a interface to a class using the keyword implements and using interface we can do multiple inheritance
\fs28 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
       
\fs24 \
\
\
}